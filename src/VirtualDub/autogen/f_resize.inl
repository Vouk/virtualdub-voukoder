// Pixel shader data auto-generated by Asuka from f_resize.vdshaders. DO NOT EDIT!

static const uint32 kVDFilterResizeFP_2tap[]={
	//     ps_2_0
	//     def c1, 1.9921875, -0.5, 0, 0
	//     dcl_pp t0.xy
	//     dcl_pp t1.xy
	//     dcl_pp t2.xy
	//     dcl_2d s0
	//     dcl_2d s1
	//     texld_pp r0, t2, s1
	//     mad_pp r1.xy, r0.w, c0, t0
	//     mad_pp r2.xy, r0.w, c0, t1
	//     texld_pp r1, r1, s0
	//     texld_pp r2, r2, s0
	//     mad_pp r0.x, r0.y, c1.x, c1.y
	//     lrp_pp r3, r0.x, r2, r1
	//     mov_pp oC0, r3
	// 
	// // approximately 8 instruction slots used (3 texture, 5 arithmetic)
	// 
	0xffff0200,0x05000051,0xa00f0001,0x3fff0000,0xbf000000,0x00000000,0x00000000,0x0200001f,
	0x80000000,0xb0230000,0x0200001f,0x80000000,0xb0230001,0x0200001f,0x80000000,0xb0230002,
	0x0200001f,0x90000000,0xa00f0800,0x0200001f,0x90000000,0xa00f0801,0x03000042,0x802f0000,
	0xb0e40002,0xa0e40801,0x04000004,0x80230001,0x80ff0000,0xa0e40000,0xb0e40000,0x04000004,
	0x80230002,0x80ff0000,0xa0e40000,0xb0e40001,0x03000042,0x802f0001,0x80e40001,0xa0e40800,
	0x03000042,0x802f0002,0x80e40002,0xa0e40800,0x04000004,0x80210000,0x80550000,0xa0000001,
	0xa0550001,0x04000012,0x802f0003,0x80000000,0x80e40002,0x80e40001,0x02000001,0x802f0800,
	0x80e40003,0x0000ffff,
};

static const uint32 kVDFilterResizeFP_4tap[]={
	//     ps_2_0
	//     def c1, 1.9921875, -0.5, 1, 0
	//     dcl_pp t0.xy
	//     dcl_pp t1.xy
	//     dcl_pp t2.xy
	//     dcl_pp t3.xy
	//     dcl_pp t4.xy
	//     dcl_2d s0
	//     dcl_2d s1
	//     texld_pp r0, t4, s1
	//     mad_pp r1.xy, r0.w, c0, t1
	//     mad_pp r2.xy, r0.w, c0, t0
	//     mad_pp r3.xy, r0.w, c0, t2
	//     mad_pp r4.xy, r0.w, c0, t3
	//     texld_pp r1, r1, s0
	//     texld_pp r2, r2, s0
	//     texld_pp r4, r4, s0
	//     texld_pp r3, r3, s0
	//     mad_pp r0.xyz, r0, c1.x, c1.y
	//     mul_pp r1, r0.y, r1
	//     mad_pp r1, r2, r0.x, r1
	//     mad_pp r1, r3, r0.z, r1
	//     dp3_pp r0.x, r0, c1.z
	//     add_pp r0.x, -r0.x, c1.z
	//     mad_pp r0, r4, r0.x, r1
	//     mov_pp oC0, r0
	// 
	// // approximately 17 instruction slots used (5 texture, 12 arithmetic)
	// 
	0xffff0200,0x05000051,0xa00f0001,0x3fff0000,0xbf000000,0x3f800000,0x00000000,0x0200001f,
	0x80000000,0xb0230000,0x0200001f,0x80000000,0xb0230001,0x0200001f,0x80000000,0xb0230002,
	0x0200001f,0x80000000,0xb0230003,0x0200001f,0x80000000,0xb0230004,0x0200001f,0x90000000,
	0xa00f0800,0x0200001f,0x90000000,0xa00f0801,0x03000042,0x802f0000,0xb0e40004,0xa0e40801,
	0x04000004,0x80230001,0x80ff0000,0xa0e40000,0xb0e40001,0x04000004,0x80230002,0x80ff0000,
	0xa0e40000,0xb0e40000,0x04000004,0x80230003,0x80ff0000,0xa0e40000,0xb0e40002,0x04000004,
	0x80230004,0x80ff0000,0xa0e40000,0xb0e40003,0x03000042,0x802f0001,0x80e40001,0xa0e40800,
	0x03000042,0x802f0002,0x80e40002,0xa0e40800,0x03000042,0x802f0004,0x80e40004,0xa0e40800,
	0x03000042,0x802f0003,0x80e40003,0xa0e40800,0x04000004,0x80270000,0x80e40000,0xa0000001,
	0xa0550001,0x03000005,0x802f0001,0x80550000,0x80e40001,0x04000004,0x802f0001,0x80e40002,
	0x80000000,0x80e40001,0x04000004,0x802f0001,0x80e40003,0x80aa0000,0x80e40001,0x03000008,
	0x80210000,0x80e40000,0xa0aa0001,0x03000002,0x80210000,0x81000000,0xa0aa0001,0x04000004,
	0x802f0000,0x80e40004,0x80000000,0x80e40001,0x02000001,0x802f0800,0x80e40000,0x0000ffff,
};

static const uint32 kVDFilterResizeFP_6tap[]={
	//     ps_2_0
	//     def c1, 1.9921875, -0.5, 0, 0
	//     dcl_pp t0.xy
	//     dcl_pp t1.xy
	//     dcl_pp t2.xy
	//     dcl_pp t3.xy
	//     dcl_pp t4.xy
	//     dcl_pp t5.xy
	//     dcl_pp t6.xy
	//     dcl_pp t7.xy
	//     dcl_2d s0
	//     dcl_2d s1
	//     texld_pp r0, t7, s1
	//     mad_pp r1.xy, r0.w, c0, t1
	//     mad_pp r2.xy, r0.w, c0, t0
	//     mad_pp r3.xy, r0.w, c0, t2
	//     mad_pp r4.xy, r0.w, c0, t3
	//     mad_pp r5.xy, r0.w, c0, t4
	//     mad_pp r6.xy, r0.w, c0, t5
	//     texld_pp r7, t6, s1
	//     texld_pp r1, r1, s0
	//     texld_pp r2, r2, s0
	//     texld_pp r3, r3, s0
	//     texld_pp r4, r4, s0
	//     texld_pp r5, r5, s0
	//     texld_pp r6, r6, s0
	//     mad_pp r7, r7, c1.x, c1.y
	//     mul_pp r1, r1, r7.y
	//     mad_pp r1, r2, r7.x, r1
	//     mad_pp r1, r3, r7.z, r1
	//     mad_pp r1, r4, r7.w, r1
	//     mad_pp r0.xy, r0, c1.x, c1.y
	//     mad_pp r1, r5, r0.x, r1
	//     mad_pp r0, r6, r0.y, r1
	//     mov_pp oC0, r0
	// 
	// // approximately 23 instruction slots used (8 texture, 15 arithmetic)
	// 
	0xffff0200,0x05000051,0xa00f0001,0x3fff0000,0xbf000000,0x00000000,0x00000000,0x0200001f,
	0x80000000,0xb0230000,0x0200001f,0x80000000,0xb0230001,0x0200001f,0x80000000,0xb0230002,
	0x0200001f,0x80000000,0xb0230003,0x0200001f,0x80000000,0xb0230004,0x0200001f,0x80000000,
	0xb0230005,0x0200001f,0x80000000,0xb0230006,0x0200001f,0x80000000,0xb0230007,0x0200001f,
	0x90000000,0xa00f0800,0x0200001f,0x90000000,0xa00f0801,0x03000042,0x802f0000,0xb0e40007,
	0xa0e40801,0x04000004,0x80230001,0x80ff0000,0xa0e40000,0xb0e40001,0x04000004,0x80230002,
	0x80ff0000,0xa0e40000,0xb0e40000,0x04000004,0x80230003,0x80ff0000,0xa0e40000,0xb0e40002,
	0x04000004,0x80230004,0x80ff0000,0xa0e40000,0xb0e40003,0x04000004,0x80230005,0x80ff0000,
	0xa0e40000,0xb0e40004,0x04000004,0x80230006,0x80ff0000,0xa0e40000,0xb0e40005,0x03000042,
	0x802f0007,0xb0e40006,0xa0e40801,0x03000042,0x802f0001,0x80e40001,0xa0e40800,0x03000042,
	0x802f0002,0x80e40002,0xa0e40800,0x03000042,0x802f0003,0x80e40003,0xa0e40800,0x03000042,
	0x802f0004,0x80e40004,0xa0e40800,0x03000042,0x802f0005,0x80e40005,0xa0e40800,0x03000042,
	0x802f0006,0x80e40006,0xa0e40800,0x04000004,0x802f0007,0x80e40007,0xa0000001,0xa0550001,
	0x03000005,0x802f0001,0x80e40001,0x80550007,0x04000004,0x802f0001,0x80e40002,0x80000007,
	0x80e40001,0x04000004,0x802f0001,0x80e40003,0x80aa0007,0x80e40001,0x04000004,0x802f0001,
	0x80e40004,0x80ff0007,0x80e40001,0x04000004,0x80230000,0x80e40000,0xa0000001,0xa0550001,
	0x04000004,0x802f0001,0x80e40005,0x80000000,0x80e40001,0x04000004,0x802f0000,0x80e40006,
	0x80550000,0x80e40001,0x02000001,0x802f0800,0x80e40000,0x0000ffff,
};

static const uint32 kVDFilterResizeFP_8tap[]={
	//     ps_2_0
	//     def c1, 1.9921875, -0.5, 1, 0
	//     dcl_pp t0
	//     dcl_pp t1
	//     dcl_pp t2.xy
	//     dcl_pp t3.xy
	//     dcl_pp t4.xy
	//     dcl_pp t5.xy
	//     dcl_pp t6.xy
	//     dcl_pp t7.xy
	//     dcl_2d s0
	//     dcl_2d s1
	//     texld_pp r0, t7, s1
	//     mad_pp r1.xy, r0.w, c0, t1
	//     mad_pp r2.xy, r0.w, c0, t0
	//     mad_pp r3.xy, r0.w, c0, t2
	//     mad_pp r4.xy, r0.w, c0, t3
	//     mad_pp r5.xy, r0.w, c0, t4
	//     mad_pp r6.xy, r0.w, c0, t5
	//     mad_pp r7.xy, r0.w, c0, t0.wzyx
	//     mad_pp r8.xy, r0.w, c0, t1.wzyx
	//     texld_pp r9, t6, s1
	//     texld_pp r1, r1, s0
	//     texld_pp r2, r2, s0
	//     texld_pp r3, r3, s0
	//     texld_pp r4, r4, s0
	//     texld_pp r5, r5, s0
	//     texld_pp r6, r6, s0
	//     texld_pp r8, r8, s0
	//     texld_pp r7, r7, s0
	//     mad_pp r9, r9, c1.x, c1.y
	//     mul_pp r1, r1, r9.y
	//     mad_pp r1, r2, r9.x, r1
	//     mad_pp r1, r3, r9.z, r1
	//     mad_pp r1, r4, r9.w, r1
	//     dp4_pp r2.w, r9, c1.z
	//     mad_pp r2.xyz, r0, c1.x, c1.y
	//     mad_pp r0, r5, r2.x, r1
	//     mad_pp r0, r6, r2.y, r0
	//     mad_pp r0, r7, r2.z, r0
	//     dp4_pp r1.x, r2, c1.z
	//     add_pp r1.x, -r1.x, c1.z
	//     mad_pp r0, r8, r1.x, r0
	//     mov_pp oC0, r0
	// 
	// // approximately 32 instruction slots used (10 texture, 22 arithmetic)
	// 
	0xffff0200,0x05000051,0xa00f0001,0x3fff0000,0xbf000000,0x3f800000,0x00000000,0x0200001f,
	0x80000000,0xb02f0000,0x0200001f,0x80000000,0xb02f0001,0x0200001f,0x80000000,0xb0230002,
	0x0200001f,0x80000000,0xb0230003,0x0200001f,0x80000000,0xb0230004,0x0200001f,0x80000000,
	0xb0230005,0x0200001f,0x80000000,0xb0230006,0x0200001f,0x80000000,0xb0230007,0x0200001f,
	0x90000000,0xa00f0800,0x0200001f,0x90000000,0xa00f0801,0x03000042,0x802f0000,0xb0e40007,
	0xa0e40801,0x04000004,0x80230001,0x80ff0000,0xa0e40000,0xb0e40001,0x04000004,0x80230002,
	0x80ff0000,0xa0e40000,0xb0e40000,0x04000004,0x80230003,0x80ff0000,0xa0e40000,0xb0e40002,
	0x04000004,0x80230004,0x80ff0000,0xa0e40000,0xb0e40003,0x04000004,0x80230005,0x80ff0000,
	0xa0e40000,0xb0e40004,0x04000004,0x80230006,0x80ff0000,0xa0e40000,0xb0e40005,0x04000004,
	0x80230007,0x80ff0000,0xa0e40000,0xb01b0000,0x04000004,0x80230008,0x80ff0000,0xa0e40000,
	0xb01b0001,0x03000042,0x802f0009,0xb0e40006,0xa0e40801,0x03000042,0x802f0001,0x80e40001,
	0xa0e40800,0x03000042,0x802f0002,0x80e40002,0xa0e40800,0x03000042,0x802f0003,0x80e40003,
	0xa0e40800,0x03000042,0x802f0004,0x80e40004,0xa0e40800,0x03000042,0x802f0005,0x80e40005,
	0xa0e40800,0x03000042,0x802f0006,0x80e40006,0xa0e40800,0x03000042,0x802f0008,0x80e40008,
	0xa0e40800,0x03000042,0x802f0007,0x80e40007,0xa0e40800,0x04000004,0x802f0009,0x80e40009,
	0xa0000001,0xa0550001,0x03000005,0x802f0001,0x80e40001,0x80550009,0x04000004,0x802f0001,
	0x80e40002,0x80000009,0x80e40001,0x04000004,0x802f0001,0x80e40003,0x80aa0009,0x80e40001,
	0x04000004,0x802f0001,0x80e40004,0x80ff0009,0x80e40001,0x03000009,0x80280002,0x80e40009,
	0xa0aa0001,0x04000004,0x80270002,0x80e40000,0xa0000001,0xa0550001,0x04000004,0x802f0000,
	0x80e40005,0x80000002,0x80e40001,0x04000004,0x802f0000,0x80e40006,0x80550002,0x80e40000,
	0x04000004,0x802f0000,0x80e40007,0x80aa0002,0x80e40000,0x03000009,0x80210001,0x80e40002,
	0xa0aa0001,0x03000002,0x80210001,0x81000001,0xa0aa0001,0x04000004,0x802f0000,0x80e40008,
	0x80000001,0x80e40000,0x02000001,0x802f0800,0x80e40000,0x0000ffff,
};

static const uint32 kVDFilterResizeFP_10tap[]={
	//     ps_2_0
	//     def c1, 1.9921875, -0.5, 0, 0
	//     dcl_pp t0
	//     dcl_pp t1
	//     dcl_pp t2
	//     dcl_pp t3
	//     dcl_pp t4.xy
	//     dcl_pp t5.xy
	//     dcl_pp t6.xy
	//     dcl_pp t7.xy
	//     dcl_2d s0
	//     dcl_2d s1
	//     texld_pp r0, t7, s1
	//     mad_pp r1.xy, r0.w, c0, t1
	//     mad_pp r2.xy, r0.w, c0, t0
	//     mad_pp r3.xy, r0.w, c0, t2
	//     mad_pp r4.xy, r0.w, c0, t3
	//     mad_pp r5.xy, r0.w, c0, t4
	//     mad_pp r6.xy, r0.w, c0, t0.wzyx
	//     mad_pp r7.xy, r0.w, c0, t1.wzyx
	//     mad_pp r8.xy, r0.w, c0, t2.wzyx
	//     texld_pp r9, t5, s1
	//     texld_pp r1, r1, s0
	//     texld_pp r2, r2, s0
	//     texld_pp r3, r3, s0
	//     texld_pp r4, r4, s0
	//     texld_pp r10, t6, s1
	//     texld_pp r5, r5, s0
	//     texld_pp r6, r6, s0
	//     texld_pp r7, r7, s0
	//     texld_pp r8, r8, s0
	//     mad_pp r9, r9, c1.x, c1.y
	//     mul_pp r1, r1, r9.y
	//     mad_pp r1, r2, r9.x, r1
	//     mad_pp r1, r3, r9.z, r1
	//     mad_pp r1, r4, r9.w, r1
	//     mad_pp r2, r10, c1.x, c1.y
	//     mad_pp r1, r5, r2.x, r1
	//     mad_pp r1, r6, r2.y, r1
	//     mad_pp r1, r7, r2.z, r1
	//     mad_pp r1, r8, r2.w, r1
	//     mad_pp r2.xy, r0.w, c0, t3.wzyx
	//     mad_pp r0.xy, r0, c1.x, c1.y
	//     texld_pp r2, r2, s0
	//     mad_pp r1, r2, r0.x, r1
	//     mad_pp r0, r4, r0.y, r1
	//     mov_pp oC0, r0
	// 
	// // approximately 35 instruction slots used (12 texture, 23 arithmetic)
	// 
	0xffff0200,0x05000051,0xa00f0001,0x3fff0000,0xbf000000,0x00000000,0x00000000,0x0200001f,
	0x80000000,0xb02f0000,0x0200001f,0x80000000,0xb02f0001,0x0200001f,0x80000000,0xb02f0002,
	0x0200001f,0x80000000,0xb02f0003,0x0200001f,0x80000000,0xb0230004,0x0200001f,0x80000000,
	0xb0230005,0x0200001f,0x80000000,0xb0230006,0x0200001f,0x80000000,0xb0230007,0x0200001f,
	0x90000000,0xa00f0800,0x0200001f,0x90000000,0xa00f0801,0x03000042,0x802f0000,0xb0e40007,
	0xa0e40801,0x04000004,0x80230001,0x80ff0000,0xa0e40000,0xb0e40001,0x04000004,0x80230002,
	0x80ff0000,0xa0e40000,0xb0e40000,0x04000004,0x80230003,0x80ff0000,0xa0e40000,0xb0e40002,
	0x04000004,0x80230004,0x80ff0000,0xa0e40000,0xb0e40003,0x04000004,0x80230005,0x80ff0000,
	0xa0e40000,0xb0e40004,0x04000004,0x80230006,0x80ff0000,0xa0e40000,0xb01b0000,0x04000004,
	0x80230007,0x80ff0000,0xa0e40000,0xb01b0001,0x04000004,0x80230008,0x80ff0000,0xa0e40000,
	0xb01b0002,0x03000042,0x802f0009,0xb0e40005,0xa0e40801,0x03000042,0x802f0001,0x80e40001,
	0xa0e40800,0x03000042,0x802f0002,0x80e40002,0xa0e40800,0x03000042,0x802f0003,0x80e40003,
	0xa0e40800,0x03000042,0x802f0004,0x80e40004,0xa0e40800,0x03000042,0x802f000a,0xb0e40006,
	0xa0e40801,0x03000042,0x802f0005,0x80e40005,0xa0e40800,0x03000042,0x802f0006,0x80e40006,
	0xa0e40800,0x03000042,0x802f0007,0x80e40007,0xa0e40800,0x03000042,0x802f0008,0x80e40008,
	0xa0e40800,0x04000004,0x802f0009,0x80e40009,0xa0000001,0xa0550001,0x03000005,0x802f0001,
	0x80e40001,0x80550009,0x04000004,0x802f0001,0x80e40002,0x80000009,0x80e40001,0x04000004,
	0x802f0001,0x80e40003,0x80aa0009,0x80e40001,0x04000004,0x802f0001,0x80e40004,0x80ff0009,
	0x80e40001,0x04000004,0x802f0002,0x80e4000a,0xa0000001,0xa0550001,0x04000004,0x802f0001,
	0x80e40005,0x80000002,0x80e40001,0x04000004,0x802f0001,0x80e40006,0x80550002,0x80e40001,
	0x04000004,0x802f0001,0x80e40007,0x80aa0002,0x80e40001,0x04000004,0x802f0001,0x80e40008,
	0x80ff0002,0x80e40001,0x04000004,0x80230002,0x80ff0000,0xa0e40000,0xb01b0003,0x04000004,
	0x80230000,0x80e40000,0xa0000001,0xa0550001,0x03000042,0x802f0002,0x80e40002,0xa0e40800,
	0x04000004,0x802f0001,0x80e40002,0x80000000,0x80e40001,0x04000004,0x802f0000,0x80e40004,
	0x80550000,0x80e40001,0x02000001,0x802f0800,0x80e40000,0x0000ffff,
};
